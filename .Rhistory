hist(df_filt_female$TotalMark)
plot.default(df_filt_male$TotalMark)
hist(df_filt_male$TotalMark)
hist(df_filt_male$TotalMark, 50)
hist(df_filt_female$TotalMark, 50)
library(datasets)
hist((airquality$Ozone)^2)
hist((airquality$Ozone))
hist(log(airquality$Ozone))
hist((airquality$Ozone)^(1/2))
hist((airquality$Ozone)^(1/3))
hist((airquality$Ozone)^(1/4))
source('/media/FC784B82784B3AA2/mooc/Sample_data - TNPSC/dataClean.R', echo=TRUE)
boxplot(TotalMarks ~ Sex, df_clean, xlab = "Sex", ylab = "TotalMarks")
boxplot(TotalMark ~ Sex, df_clean, xlab = "Sex", ylab = "TotalMarks")
boxplot(TotalMark ~ Community, df_clean, xlab = "Sex", ylab = "TotalMarks")
levels(df_clean$Community)
length(df_clean$Community == "OTHERS")
sum(df_clean$Community == "OTHERS")
sum(df_clean$Community == "SC")
sum(df_clean$Community == "ST")
sum(df_clean$Community == "BC(M)")
head(df_clean, 10)
head(df_clean, 100)
with(df_clean, plot(TotalMark))
with(subset(df_clean, Community == "SC"), points(TotalMark, col = "red"))
with(subset(df_clean, Community == "BC(OBCM)"), points(TotalMark, col = "blue"))
boxplot(TotalMark ~ Community, df_clean, xlab = "Sex", ylab = "TotalMarks")
getwd()
pdf(file = "testplot.pdf")
boxplot(TotalMark ~ Community, df_clean, xlab = "Sex", ylab = "TotalMarks")
dev.off()
library(swirl)
swirl()
1 + 5
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25 ~ region, col = "red")
boxplot(pm25 ~ region, pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- with(subset(pollution, region == "east"))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(lattitude, pm25))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.o
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png"
)
dev.off()
head(cars)
with(cars, plo)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab =  "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- airquality[airquality$Month == 5]
may <- airquality[airquality$Month == 5, ]
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 17)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, title(main = "Ozone and Wind"))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
?Devices
getwd()
setwd("./Documents/Week1_Project/")
list.files()
unzip("exdata_data_household_power_consumption.zip")
list.files()
df <- data.frame(a = 1:5, b = LETTERS[1:5])
df
df1 <- read.table("test.txt", header = TRUE, sep = " ")
head(df1)
df1 <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
head(df1)
class(df1$Date)
class(df1)
txt <- c("The", "licenses", "for", "most", "software", "are",
"designed", "to", "take", "away", "your", "freedom",
"to", "share", "and", "change", "it.",
"", "By", "contrast,", "the", "GNU", "General", "Public", "License",
"is", "intended", "to", "guarantee", "your", "freedom", "to",
"share", "and", "change", "free", "software", "--",
"to", "make", "sure", "the", "software", "is",
"free", "for", "all", "its", "users")
i <- grep("[gu]", txt)
i
txt[i]
j <- grep("16/12/2006", df1)
j <- grep("16/12/2006", df1$Date)
length(j)
head(df1, 400)
j <- df1[grep("01/02/2007", df1$Date) | grep("02/02/2007", df1$Date), ]
length(j)
head(df1)
j <- df1[grep("01/02/2007", df1$Date), df1$Date), ]
j <- df1[grep("01/02/2007", df1$Date), ]
length(j)
j <- df1[grep("02/02/2007", df1$Date), ]
length(j)
dim(j)
j <- df1[grep("1/2/2007", df1$Date) | grep("2/2/2007", df1$Date), ]
dim(j)
tail(j, 2)
j <- df1[grep("1/2/2007", df1$Date), ]
tail(j, 2)
library(dplyr)
j <- filter(df1, Date == "1/2/2007")
length(j)
dim(j)
j <- filter(df1, Date == "1/2/2007" | Date = "2/2/2007")
j <- filter(df1, Date == "1/2/2007" | Date == "2/2/2007")
dim(j)
install.packages("lubridate")
head(df1)
names(df1)
class(df1)
class(colnames(df1))
class(names(df1))
str(df1)
lapply(df1, class)
?read.table
head(df1, 2)
names(df1)
length(names(df1))
df1$Date <- as.Date(df1$Date)
class(df1$Date)
head(df1, 2)
library(lubridate)
df1$Time <- hms(df1$Time)
class(df1$Time)
head(df1, 2)
head(df1$Date, 2)
df1[[2]]
lapply(df1, class)
df1[[3]] <- as.numeric(df1[[3]])
lapply(df1, class)
with(df1, hist(Global_active_power, col = "orange", xlab = "Global Active Power (kilowatts)"))
with(df1, hist(Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)"))
with(df1, hist(Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power"))
power <- filter(df1, Date == "1/2/2007" | Date == "2/2/2007")
dim(power)
df <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
power <- filter(df1, Date == "1/2/2007" | Date == "2/2/2007")
dim(power)
power <- filter(df, Date == "1/2/2007" | Date == "2/2/2007")
dim(power)
for (i = 1:length(names(power))) {
if i = 1 {
power[[i]] <- dmy(power[[i]])
}
if i = 2 {
power[[i]] <- hms(power[[i]])
}
if i > 2 and i <9 {
power[[i]] <- as.numeric(power[[i]])
}
}
for (i in 1:length(names(power))) {
if i = 1 {
power[[i]] <- dmy(power[[i]])
}
if i = 2 {
power[[i]] <- hms(power[[i]])
}
if i > 2 and i <9 {
power[[i]] <- as.numeric(power[[i]])
}
}
lapply(power, class)
for (i in 1:length(names(power))) {
if (i = 1) {
power[[i]] <- dmy(power[[i]])
}
if (i = 2) {
power[[i]] <- hms(power[[i]])
}
if (i > 2 & i <9) {
power[[i]] <- as.numeric(power[[i]])
}
}
for (i in 1:length(names(power))) {
if (i == 1) {
power[[i]] <- dmy(power[[i]])
}
if (i == 2) {
power[[i]] <- hms(power[[i]])
}
if (i > 2 & i <9) {
power[[i]] <- as.numeric(power[[i]])
}
}
lapply(power, class)
wday <- wday(power$Date, label = TRUE)
with(power, plot(wday, Global_active_power))
with(power, plot(Date, Global_active_power))
with(power, plot(Time, Global_active_power))
with(power, plot(Time, Global_active_power, lty = 1))
with(power, plot(Time, Global_active_power, lty = 2))
?plot
with(power, plot(Time, Global_active_power, type = l))
?plot
with(power, plot(Time, Global_active_power, par(type = l)))
?plot
with(power, plot(Time, Global_active_power, type = "l"))
dev.off()
with(power, plot(Time, Global_active_power, type = "l"))
with(power, plot(Time, type = "l"))
with(power, plot(Global_active_power, type = "l"))
par(xaxp  = c("Thu", "Fri", "Sat"), 0)
axis(side = 1, at = c(0, 1500, 3000), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_active_power, type = "l"))
axis(side = 1, at = c(0, 1500, 3000), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"))
axis(side = 1, at = c(0, 1500, 3000), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"))
axis(side = 1, at = c(0, 1450, 2900), labels = c("Thu", "Fri", "Sat"))
24 * 60
head(power, 2)
dev.off()
with(power, hist(Global_active_power, col = "red",
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power"))
head(power,2)
rm(list = ls())
df <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
library(dplyr)
library(lubridate)
df <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
head(df, 2)
power <- filter(df, Date == "1/2/2007" | Date == "2/2/2007")
head(power, 2)
v <- c(0.326, 243.321)
class(v)
for (i in 1:length(names(power))) {
if (i == 1) {
power[[i]] <- dmy(power[[i]])
}
if (i == 2) {
power[[i]] <- hms(power[[i]])
}
if (i > 2 & i <9) {
power[[i]] <- as.numeric(power[[i]])
}
}
head(power, 2)
rm(list = ls())
library(dplyr)
library(lubridate)
df <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
power <- filter(df, Date == "1/2/2007" | Date == "2/2/2007")
power[[3]]
head(power$Global_active_power)
class(power$Global_active_power)
power$Global_active_power <- as.numeric(power$Global_active_power)
class(power$Global_active_power)
head(power$Global_active_power)
rm(list = ls())
library(dplyr)
library(lubridate)
df <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
power <- filter(df, Date == "1/2/2007" | Date == "2/2/2007")
power$Global_active_power <- as.character(power$Global_active_power)
head(power$Global_active_power)
power$Global_active_power <- as.numeric(power$Global_active_power)
head(power$Global_active_power)
power$Global_active_power[1] + power$Global_active_power[2]
rm(list = ls())
library(dplyr)
library(lubridate)
df <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
power <- filter(df, Date == "1/2/2007" | Date == "2/2/2007")
for (i in 1:length(names(power))) {
if (i == 1) {
power[[i]] <- dmy(power[[i]])
}
if (i == 2) {
power[[i]] <- hms(power[[i]])
}
if (i > 2 & i <9) {
power[[i]] <- as.numeric(as.character(power[[i]]))
}
}
head(power, 2)
with(power, hist(Global_active_power, col = "red",
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power"))
?dev.copy
dev.off()
png(file = "plot1.png", width = 480, height = 480)
with(power, hist(Global_active_power, col = "red",
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power"))
dev.off()
getwd()
png(file = "plot2.png", width = 480, height = 480)
with(power, plot(Global_active_power, type = "l", xaxt = "n"))
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
xlab = "", ylab = "Global Active Power (kilowatts)")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
xlab = "", ylab = "Global Active Power (kilowatts)")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
xlab = "", ylab = "Global Active Power (kilowatts)")
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
xlab = "n", ylab = "n")
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
xlab = "n", ylab = "n")
dev.off()
with(power, plot(Global_active_power, type = "l", axes = "n", xaxt = "n"),
xlab = "", ylab = "")
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
xlab = "", ylab = NULL)
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
ylab = "n")
title(ylab = "Global Active Power (kilowatts)", xlab = "")
dev.off()
with(power, plot(Global_active_power, type = "l", xaxt = "n"),
ylab = NA)
dev.off()
with(power, plot(Global_active_power, type = "l", ylab = NA, xaxt = "n"))
dev.off()
with(power, plot(Global_active_power, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Global Active Power (kilowatts)", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
plot(x, type = "n")
plot(power$Sub_metering_1, type = "n")
dev.off()
plot(power$Sub_metering_1, type = "n", xlab = NA, ylab = NA, xaxt = "n")
points(power$Sub_metering_1, type = "l")
points(power$Sub_metering_2, type = "l")
points(power$Sub_metering_2, type = "l", col = "red")
points(power$Sub_metering_3, type = "l", col = "blue")
title(ylab = "Energy sub metering", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
legend("topright", type = "l", col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
title(ylab = "Energy sub metering", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
legend("topright", col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
plot(power$Sub_metering_1, type = "l", type = "n", xlab = NA, ylab = NA, xaxt = "n")
plot(power$Sub_metering_1, type = "n", xlab = NA, ylab = NA, xaxt = "n")
points(power$Sub_metering_1, type = "l")
points(power$Sub_metering_2, type = "l", col = "red")
points(power$Sub_metering_3, type = "l", col = "blue")
title(ylab = "Energy sub metering", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
legend("topright", type = c("l", "l", "l"), col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", type = "l", col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
png(file = "plot3.png", width = 480, height = 480)
plot(power$Sub_metering_1, type = "n", xlab = NA, ylab = NA, xaxt = "n")
points(power$Sub_metering_1, type = "l")
points(power$Sub_metering_2, type = "l", col = "red")
points(power$Sub_metering_3, type = "l", col = "blue")
title(ylab = "Energy sub metering", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
with(power, plot(Voltage, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Voltage", xlab = "datetime")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
with(power, plot(Global_reactive_power, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Global_reactive_power", xlab = "datetime")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
png(file = "plot4.png", width = 480, height = 480)
par(mfrow = c(2,2))
with(power, plot(Global_active_power, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Global Active Power (kilowatts)", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
plot(power$Sub_metering_1, type = "n", xlab = NA, ylab = NA, xaxt = "n")
points(power$Sub_metering_1, type = "l")
points(power$Sub_metering_2, type = "l", col = "red")
points(power$Sub_metering_3, type = "l", col = "blue")
title(ylab = "Energy sub metering", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(power, plot(Voltage, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Voltage", xlab = "datetime")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
with(power, plot(Global_reactive_power, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Global_reactive_power", xlab = "datetime")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
png(file = "plot4.png", width = 480, height = 480)
par(mfcol = c(2,2))
with(power, plot(Global_active_power, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Global Active Power (kilowatts)", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
plot(power$Sub_metering_1, type = "n", xlab = NA, ylab = NA, xaxt = "n")
points(power$Sub_metering_1, type = "l")
points(power$Sub_metering_2, type = "l", col = "red")
points(power$Sub_metering_3, type = "l", col = "blue")
title(ylab = "Energy sub metering", xlab = "")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(power, plot(Voltage, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Voltage", xlab = "datetime")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
with(power, plot(Global_reactive_power, type = "l", xlab = NA, ylab = NA, xaxt = "n"))
title(ylab = "Global_reactive_power", xlab = "datetime")
axis(side = 1, at = c(0, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
dev.off()
rm(list = ls())
df <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
lapply(df, class)
power <- filter(df, Date == "1/2/2007" | Date == "2/2/2007")
datetime <- strptime(paste(power$Date, power$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
head(datetime)
plot(datetime, power$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
